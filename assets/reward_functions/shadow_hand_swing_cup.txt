import torch
from typing import Dict, Tuple

@torch.jit.script
def compute_reward(object_pos: torch.Tensor, object_rot: torch.Tensor, object_linvel: torch.Tensor, cup_right_handle_pos: torch.Tensor, cup_left_handle_pos: torch.Tensor, left_hand_pos: torch.Tensor, right_hand_pos: torch.Tensor, goal_pos: torch.Tensor, goal_rot: torch.Tensor) -> Tuple[torch.Tensor, Dict[str, torch.Tensor]]:
    object_goal_distance = torch.norm(object_pos - goal_pos, dim=-1)
    distance_reward_temperature = 0.1
    object_goal_distance_reward_weight = 2.0
    object_goal_distance_reward = -torch.exp(-distance_reward_temperature * object_goal_distance) * object_goal_distance_reward_weight

    right_cup_handle_dist = torch.norm(cup_right_handle_pos - right_hand_pos, dim=-1)
    left_cup_handle_dist = torch.norm(cup_left_handle_pos - left_hand_pos, dim=-1)

    cup_orientation_diff = 1 - torch.sum(torch.mul(object_rot, goal_rot), dim=-1) ** 2
    cup_orientation_reward_weight = 0.25
    cup_orientation_reward = -(cup_orientation_diff * cup_orientation_reward_weight)

    grasp_temperature_1 = 0.25
    grasp_temperature_2 = 0.25
    right_grasp_reward = torch.exp(-grasp_temperature_1 * right_cup_handle_dist)
    left_grasp_reward = torch.exp(-grasp_temperature_2 * left_cup_handle_dist)

    grasp_reward = (right_grasp_reward + left_grasp_reward - 1.0)

    cup_linvel_norm = torch.norm(object_linvel, dim=-1)
    cup_linvel_penalty_weight = 0.1
    cup_linvel_penalty = -(cup_linvel_norm * cup_linvel_penalty_weight)

    touch_reward_temperature = 0.25
    touch_reward_weight = 0.125
    touch_reward = (torch.exp(-touch_reward_temperature * right_cup_handle_dist) + torch.exp(-touch_reward_temperature * left_cup_handle_dist) - 1.0) * touch_reward_weight

    total_reward = grasp_reward + object_goal_distance_reward + cup_orientation_reward + cup_linvel_penalty + touch_reward

    reward_dict = {
        "grasp_reward": grasp_reward,
        "object_goal_distance_reward": object_goal_distance_reward,
        "cup_orientation_reward": cup_orientation_reward,
        "cup_linvel_penalty": cup_linvel_penalty,
        "touch_reward": touch_reward
    }

    return total_reward, reward_dict
